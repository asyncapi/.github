name: Emoji Checker

on:
  schedule:
    - cron: "0 8 * * *" # run this job at 8:00 am daily
  pull_request_review_comment:
    types: [created, edited]
  issue_comment:
    types: [created, edited]
  pull_request_review:
    types: [submitted]
  discussion:
    types: [created, edited]
  discussion_comment:
    types: [created, edited]
env:
  THRESHOLD_REACTIONS: 5
jobs:
  check-emojis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Check emojis
        uses: actions/github-script@v6
        id: check-emojis
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const query = `
              query ($owner: String!, $repo: String!, $number: Int!) {
                repository(owner: $owner, name: $repo) {
                  issueOrPullRequest(number: $number) {
                    ... on Issue {
                      title
                      url
                      reactions(last: 100) {
                        nodes {
                          content
                          user {
                            login
                          }
                        }
                      }
                    }
                    ... on PullRequest {
                      title
                      url
                      reactions(last: 100) {
                        nodes {
                          content
                          user {
                            login
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;
            const variables = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              number: context.issue.number
            };
            const result = await github.graphql(query, variables);
            const node = result.repository.issueOrPullRequest;
            const reactions = node.reactions.nodes;
            const reactionCounts = {};
            reactions.forEach(reaction => {
              const content = reaction.content;
              if (content in reactionCounts) {
                reactionCounts[content]++;
              } else {
                reactionCounts[content] = 1;
              }
            });
            let message = '';
            let totalReactions = 0;
            for (const [emoji, count] of Object.entries(reactionCounts)) {
              message += `${emoji}: ${count}\n`;
              totalReactions += count;
            }
            if (message !== '' && totalReactions >= process.env.THRESHOLD_REACTIONS) {
              const title = node.title;
              const url = node.url;
              message = `The issue/PR "${title}" (${url}) has the following emojis:\n${message}`;
              console.log(message);
            }
            else {
              message = '';
            }
            return message;
          result-encoding: string
      - name: Post to a Slack channel
        id: slack
        if: ${{ steps.check-emojis.outputs.result }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
          channel-id: 'C050YTTDYUS'
          # For posting a simple plain text message
          slack-message: ${{ steps.check-emojis.outputs.result }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
